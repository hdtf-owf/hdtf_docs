{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#welcome-to-the-hdtf-tech-docs","title":"Welcome to the HDTF: Tech Docs","text":"<p>this site is used to document how technical or gameplay features work inside of hdtf</p> <p>Go to docs!</p> <p>if you would like to contribute to the website please press the github link on the top right and do a pull request so you can add more information to our docs and help out other moders</p> <p>join our community discord server and follow us on our social media: </p> <p>Discord  Twitter </p> <p>Note</p> <p>This project is under active development.</p>"},{"location":"documentation/Mechanics/Staged%20Reloads/","title":"Staged Reloads","text":"Video showcasing Staged reload's The footage is outdated the slide doesn't pop back when pulling the gun out anymore <p>HDTF has support for Staged Reloads.</p> <p>Staged reloads work off of animation events</p>"},{"location":"documentation/Mechanics/Staged%20Reloads/#animation-events","title":"Animation Events","text":"<p>the animation events are called</p> <ul> <li><code>AE_WPN_STAGE_MAGIN</code> When the mag is taken out</li> <li><code>AE_WPN_STAGE_EMPTY_MAGIN</code> When the gun has 0 ammo in its clip and the mag is taken out</li> <li><code>AE_WPN_STAGE_BOLTRELEASE</code> When the gun has a mag inside of it but the bolt hasn't been released</li> <li><code>AE_WPN_FULLCLIP1</code> Fills the clip of the gun to the max clip capacity</li> <li><code>AE_WPN_STAGE_ONEBULLET</code> Sets clip to only have 1 bullet and gives back the rest of the ammo that was inside of the clip back into the ammo reserve</li> </ul> <p>these are just basic <code>Booleans</code></p> <p>they are turned on and off based on an animation frame</p>"},{"location":"documentation/Mechanics/Staged%20Reloads/#activity-names","title":"Activity Names","text":"<p>the following activities used for staged reloads are</p> <ul> <li><code>ACT_VM_STAGE_MAGIN</code></li> <li><code>ACT_VM_STAGE_EMPTY_MAGIN</code></li> <li><code>ACT_VM_STAGE_BOLTRELEASE</code></li> </ul> <p>these are the activities that are called when the corresponding animation event is set to <code>1</code></p>"},{"location":"documentation/Mechanics/Staged%20Reloads/#emaxple-sequences","title":"Emaxple Sequences","text":"<p>here are examples of how you might set up a sequence for staged reloads inside your qc file</p>"},{"location":"documentation/Mechanics/Staged%20Reloads/#act_vm_reload","title":"<code>ACT_VM_RELOAD</code>","text":"<pre><code>$sequence \"reload\" {\n    \"v_1911_anims\\reload.smd\"\n    activity \"ACT_VM_RELOAD\" -1\n\n    //////Reload stage\n    { event AE_WPN_STAGE_MAGIN 34 \"1\" }\n\n    { event AE_WPN_STAGE_ONEBULLET 35 }\n\n    { event AE_WPN_STAGE_MAGIN 70 \"0\" }\n\n    { event AE_WPN_FULLCLIP1 71 }\n\n    fadein 0.2\n    fadeout 0.2\n    snap\n    fps 60\n}\n</code></pre>"},{"location":"documentation/Mechanics/Staged%20Reloads/#act_vm_reload_empty","title":"<code>ACT_VM_RELOAD_EMPTY</code>","text":"<pre><code>$sequence \"reload_empty\" {\n    \"v_1911_anims\\reload_empty.smd\"\n    activity \"ACT_VM_RELOAD_EMPTY\" -1\n\n    //////Reload stage\n    { event AE_WPN_STAGE_EMPTY_MAGIN 17 \"1\" }\n\n    { event AE_WPN_STAGE_EMPTY_MAGIN 58 \"0\" }\n\n    { event AE_WPN_STAGE_BOLTRELEASE 59 \"1\" }\n\n    { event AE_WPN_STAGE_BOLTRELEASE 104 \"0\" }\n\n    { event AE_WPN_FULLCLIP1 105 }\n\n    fadein 0.2\n    fadeout 0.2\n    snap\n    fps 60\n}\n</code></pre>"},{"location":"documentation/Mechanics/Staged%20Reloads/#act_vm_stage_magin","title":"<code>ACT_VM_STAGE_MAGIN</code>","text":"<pre><code>$sequence \"reload_magin_stage\" {\n    \"v_1911_anims\\reload_magin_stage.smd\"\n    activity \"ACT_VM_STAGE_MAGIN\" -1\n\n    { event AE_WPN_STAGE_MAGIN 41 \"0\" }\n\n    { event AE_WPN_FULLCLIP1 41 }\n\n    fadein 0.2\n    fadeout 0.2\n    snap\n    fps 60\n}\n</code></pre>"},{"location":"documentation/Mechanics/Staged%20Reloads/#act_vm_stage_empty_magin","title":"<code>ACT_VM_STAGE_EMPTY_MAGIN</code>","text":"<pre><code>$sequence \"reload_empty_magin_stage\" {\n    \"v_1911_anims\\reload_empty_magin_stage.smd\"\n    activity \"ACT_VM_STAGE_EMPTY_MAGIN\" -1\n\n    { event AE_WPN_STAGE_EMPTY_MAGIN 40 \"0\" }\n\n    { event AE_WPN_STAGE_BOLTRELEASE 41 \"1\" }\n\n    { event AE_WPN_STAGE_BOLTRELEASE 86 \"0\" }\n\n    { event AE_WPN_STAGE_MAGIN 40 \"0\" } //DO THIS ON MAGIN EMPTY TO FIX BOLT RELEASE\n\n    { event AE_WPN_FULLCLIP1 86 }\n\n    fadein 0.2\n    fadeout 0.2\n    snap\n    fps 60\n}\n</code></pre> <p>Important</p> <p>we need to set <code>AE_WPN_STAGE_MAGIN</code> to <code>0</code> here so we can fix the bolt release caused by the activity being called incorrectly</p>"},{"location":"documentation/Mechanics/Staged%20Reloads/#act_vm_stage_boltrelease","title":"<code>ACT_VM_STAGE_BOLTRELEASE</code>","text":"<pre><code>$sequence \"reload_empty_bolt_stage\" {\n    \"v_1911_anims\\reload_empty_bolt_stage.smd\"\n    activity \"ACT_VM_STAGE_BOLTRELEASE\" -1\n    { event AE_WPN_STAGE_BOLTRELEASE 16 \"0\" }\n\n    { event AE_WPN_STAGE_MAGIN 1 \"0\" }\n\n    { event AE_WPN_FULLCLIP1 17 }\n\n    fadein 0.2\n    fadeout 0.2\n    snap\n    fps 60\n}\n</code></pre>"},{"location":"documentation/Mechanics/Staged%20Reloads/#pose-parameter","title":"Pose Parameter","text":"<p>We use pose parameters to make sure the gun's bolt stays locked back even when switching weapons</p> <p>the pose parameter is called <code>pose_depleted</code></p>"},{"location":"documentation/Mechanics/Staged%20Reloads/#example-pose-parameter","title":"<code>Example Pose Parameter</code>","text":"<pre><code>$poseparameter \"pose_depleted\" 0 1 loop 0\n\n$animation \"a_normal\" \"v_1911_anims\\idle.smd\" {\n  frames 0 0\n}\n\n$animation \"a_empty\" \"v_1911_anims\\slide_poses.smd\" {\n  frames 1 1\n  subtract \"a_normal\" 0\n}\n\n$animation \"a_full\" \"v_1911_anims\\slide_poses.smd\" {\n  frames 0 0\n  subtract \"a_normal\" 0\n}\n\n$sequence \"empty_power\" {\n  \"a_full\"\n  \"a_empty\"\n  autoplay\n  blend \"pose_depleted\" 0 1\n  blendwidth 2\n  delta\n  fadein 0.2\n  fadeout 0.2\n  hidden\n}\n</code></pre>"},{"location":"documentation/Mechanics/Staged%20Reloads/#weapon-and-magazine-bodygroups","title":"Weapon And Magazine BodyGroups","text":"<p>for the bodygroups on the magazine to work properly</p> <p>we need to setup propper bodygroups</p> <p>for the weapons itself and for the magzine</p>"},{"location":"documentation/Mechanics/Staged%20Reloads/#example-bodygroups","title":"<code>Example BodyGroups</code>","text":"<p>the following is a properly setup bodygroup for the weapon viewmodel</p> <pre><code>$bodygroup Weapon\n{\n    studio \"mesh.smd\"\n}\n\n$bodygroup magazine\n{\n    studio \"mag.smd\"\n    blank\n}\n</code></pre> <p>Note</p> <p>the Mesh of the gun needs to be made without a magazine on it and the mag needs to be a mesh without a weapon on it </p> <p>you can use your normal mesh to do this</p>"},{"location":"documentation/Mechanics/Staged%20Reloads/#info","title":"Info","text":"<p>for more help with <code>Staged Reloads</code> join the HDTF Discord server to ask for Help on the subject</p>"},{"location":"documentation/Mechanics/Viewmodel%20Arms/","title":"Viewmodel Arms","text":"<p> gif showing how c_arms can look              image author: MonsterBoo_</p> <p>Note</p> <p>Aspects of this feature may be subject to change</p> <p>HDTF supports seperate arms from the viewmodels akin to L4D, Garry's mod and CSGO with some slight differences and requirements.</p>"},{"location":"documentation/Mechanics/Viewmodel%20Arms/#using-arms-with-weapons","title":"Using arms with weapons","text":"<p>As the transition from the old HL2 style v_models will take time, by default weapons do not have any arm models attached. To attach arms the associated weapon script requires a <code>uses_arms</code> entry set to <code>1</code>.</p> <pre><code>// Example using scripts/weapon_knife.txt\nWeaponData\n{\n    \"printname\" \"#HDTF_KNIFE\"\n    \"viewmodel\"             \"models/weapons/v_knife.mdl\"\n    \"playermodel\"           \"models/weapons/w_knife.mdl\"\n    ...\n    \"uses_arms\"  \"1\"\n    ...\n}\n</code></pre>"},{"location":"documentation/Mechanics/Viewmodel%20Arms/#specifying-arms-per-map","title":"Specifying arms per map","text":"<p>If a map needs to use a specific arm type it must be specified in the map itself. To do this open the map in Hammer, then on the Menu bar go to <code>Map</code> \u2192 <code>Map Properties</code>, and change the option <code>Arms Skin</code> to the desired type.</p> <pre><code>\"Arms Skin\"\n[    \n    0 : \"Default\" - Marine outfit seen in Prologue &amp; Act 1.\n    1 : \"Jacket\" - black jacket with leather gloves seen in Act 3.\n    2 : \"Snow coat\" - white coat seen in Act 2.\n    3 : \"Bare\" - bare hands as seen in Tutorial level.\n]\n</code></pre>"},{"location":"documentation/Mechanics/Viewmodel%20Arms/#console-commands","title":"Console Commands","text":"<ul> <li><code>cl_disable_arms</code> - Setting this to 1 will disable drawing the arm model.</li> <li><code>hdtf_set_arms_type</code> - Setting this to a value from 0 to 3 will change the current arm type being used. Uses the same ordering found in the map properties setting.</li> </ul>"},{"location":"documentation/Shaders/PBR/1._VMT_for_Dummies/","title":"VMTs 101","text":"<p>VMT's stand for Valve Material.. Text? I don't know and it doesn't matter... Basically, its a text file that requires some special formatting...</p>"},{"location":"documentation/Shaders/PBR/1._VMT_for_Dummies/#heres-how-it-works","title":"Heres how it works","text":"<pre><code>\"SHADERNAME\"\n{\n   \"$Parametername\" \"Value\"\n   \"$Parametername\" \"Value\"\n   \"$Parametername\" \"Value\"\n   \"$Parametername\" \"Value\"\n   \"$Parametername\" \"Value\"\n}\n</code></pre> <p>Congratulations you now know how VMT's work. Some things to keep in mind when writing VMT's.</p> <ol> <li>\"Just\" \"put\" \"everything\" \"in\" \"brackets\" I don't want to explain why. Just do it. But basically, you can mess up a VMT by not having them. It doesn't hurt if you do have them. So just spam the \"</li> <li>Vector and Color parameters must be in [ ] brackets.</li> <li>Parameters are not case sensitive, but Proxies outside of \"\" ARE case sensitive!</li> </ol>"},{"location":"documentation/Shaders/PBR/1._VMT_for_Dummies/#parameter-types-and-what-they-want","title":"Parameter types and what they want","text":"<pre><code>// This starts in materials/ folder of the game/mod\n$TextureParameter  \"Path\\VTF Filename ( without extension )\"\n$BooleanParameter  \"0 or 1\"\n$IntegerParameter  \"-65536 to 65536\"\n$FloatParameter         \"Float values, negative or positive\"\n$MatrixParameter  \" I won't put this here. just copy it from the VDC \"\n$ColorParameter   \"[R G B]\" // float values\n$VectorParameter(s)  \"[X Y]\" // Vec2 Parameters\n$VectorParameter(s)  \"[X Y Z]\" // Vec3 Parameters\n$VectorParameter(s)  \"[X Y Z W]\" // Vec4 Parameters\n$StringParameters  \"You won't really see any of these, anytime soon.\"\n</code></pre> <p>You can find a list of VMT Parameters that are accepted by our PBR Shader,</p> <p>shader parameters</p>"},{"location":"documentation/Shaders/PBR/1._VMT_for_Dummies/#pbr-example-of-the-above","title":"PBR Example of the above","text":"<p>Here's some Pseudo VMTs that would work with our PBR Shader.</p> <p>Models :</p> <pre><code>\"PBR_MODEL\"\n{\n   \"$BaseTexture\" \"models/props_pbr/modelX_BC\"\n   \"$NormalTexture\" \"models/props_pbr/modelX_NdxH\"\n   \"$MraoTexture\" \"models/props_pbr/modelX_MRAO\"\n   \"$Detail\"  \"models/props_pbr/modelX_SSBump\"\n\n   // Boolean Parameter\n   \"$InternalBoolWVT\" \"0\"\n\n   // Integer Parameter\n   \"$DetailBlendMode\" \"11\"\n\n   // Float Parameter\n   \"$DetailBlendFactor\" \"0.5\"\n\n   // Vector Parameter\n   \"$EnvMapTint\"  \"[1 0 0]\"\n\n   // StringParameter\n   \"$MaterialName\"  \"The Shader Sets this automatically\"\n}\n</code></pre> <p>Brushes :</p> <pre><code>\"PBR\"\n{\n    \"$BaseTexture\" \"rocks/RockX_BC\"\n    \"$NormalTexture\" \"rocks/RockX_NdxH\"\n    \"$MraoTexture\" \"rocks/RockX_MRAO\"\n}\n</code></pre> <p>Note</p> <p>The Shader automatically detects if the VMT its using is located within the <code>models</code> folder and force PBR_MODEL if so.</p>"},{"location":"documentation/Shaders/PBR/2._PBR_Textures/","title":"PBR Textures","text":"<p>PBR Textures should follow some guidelines.  Important note :  Using VTFedit ( for example ) for converting textures does not allow you to use 16b/c textures, at all!  When converting a 16b/c texture, vtf edit will convert it to 8b/c first and then convert that.</p>"},{"location":"documentation/Shaders/PBR/2._PBR_Textures/#for-all-textures","title":"For all Textures","text":"<p>If you use compressed Ported Formats ( .vtf image formats ),  export your textures as the next power of 2 and then clamp downwards.  This will make the end result look less compressed ( speaking from experience )</p>"},{"location":"documentation/Shaders/PBR/2._PBR_Textures/#basetexture","title":"$BaseTexture","text":"<p>BaseColor of the material. Export Format ( when export from Substance for example ) should be :</p> <ul> <li> <p>8 bits/channel source format ( Just use .tif 16b/c for everything )</p> </li> <li> <p>sRGB ( non-linear )  sRGB8 is the default format for BaseColor in Substance Painter.</p> </li> </ul> <p>Ported Format ( when imported to .vtf )</p> <ul> <li> <p>sRGB flag when importing</p> </li> <li> <p>Preferably format that is 8 b/c  ( Don't use formats such as rgba16161616f, rgba16161616 )  Other formats will just waste Disk-space, basically.</p> </li> </ul>"},{"location":"documentation/Shaders/PBR/2._PBR_Textures/#normaltexture-bumpmap","title":"$NormalTexture / $BumpMap","text":"<p>Also known as Normal Map. Export Format ( when export from Substance for example ) should be :</p> <ul> <li>Just do whatever, but export as 16b/c. ( just use .tif at 16b/c )</li> </ul> <p>Ported Format ( when imported to .vtf )</p> <ul> <li> <p>DirectX Normal Map Directions.  ( Turns out that Textures.com Normals are OpenGL Format  )  If your format is OpenGL, just flip the green channel ( 1.0f - Green Channel, or er ctrl + i in Photoshop )  If you don't know what any of this means, you should learn what it means via search engine here</p> </li> <li> <p>VTF Normal Map flag.  This does some wacky stuff regarding mip-maps, just do it, don't question it.  Normal maps should be flagged as such?? Big surprise!</p> </li> <li> <p>Preferably use BGR565, unless alpha channel is needed or the file is too large...</p> </li> </ul>"},{"location":"documentation/Shaders/PBR/2._PBR_Textures/#mraotexture","title":"$MRAOTexture","text":"<ul> <li>Red = Metallic</li> <li>Green = Roughness</li> <li>Blue = Ambient Occlusion</li> </ul> <p>Export Format ( when export from Substance for example ) should be :</p> <ul> <li>8 or 16 bits/channel source format ( Just use .tif 16b/c for everything )</li> </ul> <p>Ported Format ( when imported to .vtf )</p> <ul> <li>Preferably not compressed. But when compressed, BGR565</li> </ul> <p>Suggestions :</p> <ul> <li> <p>Use BGR565 for Rough Materials with low/no Metallic  That is because    in this format, the Channel including Roughness will have least    compression and it will make the file the smallest, whilst still    looking very HQ</p> </li> <li> <p>Preferably don't use Formats with preserved Alpha Channels ( RGBA8888 or DXT5 )</p> </li> </ul>"},{"location":"documentation/Shaders/PBR/2._PBR_Textures/#emissiontexture","title":"$EmissionTexture","text":"<p>Additive Self-Illumination of the material. If you want resulting bloom, the $BaseTexture must be non-black.</p> <p>Export Format ( when export from Substance for example ) should be :</p> <ul> <li>8 bits/channel source format ( Just use .tif 16b/c for everything )</li> <li>sRGB ( non-linear )  sRGB8 is the default format for Emissive Substance Painter.</li> </ul> <p>Ported Format ( when imported to .vtf )</p> <ul> <li>sRGB flag when importing</li> <li>Preferably format that is 8 b/c, and compressed ( DXT5 )  ( Don't use formats such as rgba16161616f, rgba16161616 )  Other formats will just waste Disk-space, basically.</li> </ul>"},{"location":"documentation/Shaders/PBR/2._PBR_Textures/#ssstexture","title":"$SSSTEXTURE","text":"<p>Thickness Map and Color Texture for Models.</p> <ul> <li>Red = Thickness</li> <li>Green = Red Channel of desired SSS-Color</li> <li>Blue = Green Channel of desired SSS-Color</li> <li>Alpha = Blue Channel of desired SSS-Color</li> </ul> <p>Now hold on a second, this might look a bit odd, why is Thickness on the Red Channel instead of Alpha?  Glad you asked!</p> <p>Using advanced statistical analysis on the probability of Blue Color in Sub-Surface Scattering.  ( We tried to come up with things that are blue and have Subsurface Scattering )  We determined that... Blue is not all that likely... I mean... Blue Mushrooms, Butterflies... Duh?!  By saying RIP to alpha ( blue color in an SSS-Texture ),  you may be able to use compressed formats such as BGR565 or preferably DXT1!  This was done as a diskspace saving measure.  If your SSS Texture only has Thickness and Blue color, you may use a format such as IA88  Just make sure to set $SSSTint to \"[0 0 1]\" otherwise it will interpret thickness for Red and Green Color.</p> <p>Export Format ( when export from Substance for example ) should be :</p> <ul> <li>16 bits/channel source format ( Just use .tif 16b/c for everything )</li> <li>Linear Data</li> </ul> <p>This is very important, because the blue channel of the color is in the alpha channel.  Alpha Channels will not get converted from Gamma to Linear, so sRGB is out of the question.</p> <p>Ported Format ( when imported to .vtf )</p> <ul> <li>DXT1 or BGR565 ( if less compression is desired ) for when there is no blue</li> <li>DXT5 for when there is blue</li> <li>Preferably format that is 8 b/c, and compressed such as DXT1 - DXT5 or BGR565. Don't use formats such as rgba16161616f, rgba16161616. Other formats will just waste Disk-space.</li> </ul>"},{"location":"documentation/Shaders/PBR/2._PBR_Textures/#bentnormal","title":"$BentNormal","text":"<p>Bent Normal Map.  Export Format ( when export from Substance or Marmoset ) should be :</p> <ul> <li> <p>Tangent Space Normal Map. ( This can be done via Substance or Marmoset Toolbag )</p> </li> <li> <p>Linear Data</p> </li> <li> <p>Just use .tif, hope you learned that by now</p> </li> <li> <p>If you can somehow include usual Normal Map data in this, don't. ( Do tell us that its possible? )</p> </li> </ul> <p>Ported Format ( when imported to .vtf )</p> <ul> <li> <p>BGR565, or higher res DXT1</p> </li> <li> <p>Flag as Normal Map...</p> </li> </ul>"},{"location":"documentation/Shaders/PBR/2._PBR_Textures/#propertiestexture","title":"$PropertiesTexture","text":"<p>Wetness/Porosity Masking Texture, that also includes mask and roughness from the $VectorLayerTexture.</p> <pre><code>Red  = Wetness Mask\nGreen = Porosity Mask\nBlue = VectorLayer Mask\nAlpha = VectorLayer Roughness\n</code></pre> <p>Export Format ( when export from Substance or Marmoset ) should be :</p> <ul> <li>Linear Data</li> </ul> <p>Ported Format ( when imported to .vtf )</p> <ul> <li> <p>BGR565, or higher res DXT1 when no VectorLayer Data.</p> </li> <li> <p>RGBA8888 when VectorLayer Data and Wetness/Porosity Data</p> </li> <li> <p>IA88 when VectorLayer Data but no Wetness/Porosity Data</p> </li> </ul>"},{"location":"documentation/Shaders/PBR/2._PBR_Textures/#vectorlayertexture","title":"$VectorLayerTexture","text":"<pre><code>RGB  = VectorLayer Color\nAlpha = VectorLayer AO\n</code></pre> <p>Export Format ( when export from Substance or Marmoset ) should be :</p> <ul> <li> <p>8 bits/channel source format ( Just use .tif 16b/c for everything )</p> </li> <li> <p>sRGB ( non-linear )</p> </li> </ul> <p>Ported Format ( when imported to .vtf )</p> <ul> <li> <p>sRGB flag when importing</p> </li> <li> <p>Preferably format that is 8 b/c, and compressed ( DXT5 )  ( Don't use formats such as rgba16161616f, rgba16161616 )  Other formats will just waste Disk-space, basically.</p> </li> </ul>"},{"location":"documentation/Shaders/PBR/PBR_Parameters/","title":"PBR Parameters","text":""},{"location":"documentation/Shaders/PBR/PBR_Parameters/#shader-names","title":"Shader Names","text":"<ul> <li>PBR for Brushes</li> <li>PBR_MODEL for models</li> <li>Use $BaseTexture2, $MRAOTexture2, $BumpMap2.... for Blended Materials ( Displacements )</li> </ul> <p>IMPORTANT</p> <p>Having your material inside <code>materials/models/</code> folder will automatically force <code>$model</code> flag and thus PBR_MODEL</p>"},{"location":"documentation/Shaders/PBR/PBR_Parameters/#features-for-models","title":"Features for Models","text":""},{"location":"documentation/Shaders/PBR/PBR_Parameters/#wetness-porosity","title":"Wetness Porosity","text":"<p>Wetness | Porosity are special surface properties that are more or less intuitive for Artists to define a mask for. Additionally because this is a separate function it can be used to dynamically ramp up the wetness of materials. This can be very useful if a map requires accumulating material wetness, for example when initially there is no rain. Or vice versa.-If rain is going away</p> <p>Wetness is Masked by using the RED Channel of the  $PropertiesTexture Porosity is Masked by using the GREEN Channel of the $PropertiesTexture The $PropertiesTexture has two channels remaining that are used for VectorLayer Textures!</p> <p>Here are available parameters and what they do.</p> <pre><code>// Defines a mask for the Effect. This has to be set in order to use Wetness/Porosity.\n// However, just defining a black texture allows you to simply bias Wetness, but not Porosity.\n\"$PropertiesTexture\" \"path/name\"\n\n// Enables Wetness/Porosity behaviour. This is a separate bool because of VectorLayers\n\"$WetnessPorosity\" \"1\"\n\n// Levels Wetness. -1 will entirely remove wetness. ( Proxies may be used to modify this )\n\"$WetnessBias\" \"-1\"\n</code></pre> <p>Rock without Wetness ( or rather, it has -1 bias )    Note that this is full wetness and its not really masked. Up-Facing Normals will be forced to 1, which will give the appearance of full submersion of the material.</p> <p></p>"},{"location":"documentation/Shaders/PBR/PBR_Parameters/#detail-textures","title":"Detail Textures","text":"<p>See Detail Textures on the Valve Developer Community ( VDC )</p> <p>Note that some of the Blendmodes might have unexpected results. ( BlendMode 11 )  Also $DetailBlendMode 10 is currently not implemented on Brushes and cannot be implemented on Models.</p> <p>Note</p> <p>Incompatible with <code>$PropertiesTexture</code> ( Wetness/Porosity ) due to Sampler Limitation.</p>"},{"location":"documentation/Shaders/PBR/PBR_Parameters/#sub-surface-scattering","title":"Sub-Surface Scattering","text":"<p>Sub-Surface Scattering should be used sparingly as it does everything a usual shader does and SSS. The effect itself will not be explained, you can use online reference for that instead. In our Shader there are various parameters to control the effect, here they are.</p> <pre><code>// Refer to PBR Textures, R is the Thickness, GBA is RGB Color.\n\"$SSSTexture\" \"path/name\"\n\n// Float. Controls the spread of the SSS. If you can't spread enough, adjust Thickness.\n// Default is 1.0, but 5 might be more reasonable.\n\"$SSSPower\" \"5\"\n\n// Adjust strength before being applied to anything.\n// This is useful for when you want $SSSEmission AND regular Emission.\n// However, it eventually just acts like $SSSEmission itself.\n\"$SSSScale\" \"1.0\"\n\n// Only applied to regular SSS and not $SSSEmission.\n// Multiplier for the intensity of the SSS Effect. Default of 1.0\n\"$SSSIntensity\" \"1.0\"\n\n// Tint for the SSS Color. If the texture does not have an alpha channel,\n// set blue to 0, this might happen automatically on the shader in a future update.\n\"$SSSTint\" \"[R G B]\"\n\n// SSS Emission is a special effect that will output the Emissiontexture multiplied by SSS separetely.\n// This was intended to add glow to more solid objects like the crystals.\n// This will force glow to only appear on dark/shadowed areas.\n// But whether or not we find a use remains to be seen. Default Value is 0.0, its a float.\n\"$SSSEmission\" \"0.0\"\n</code></pre> <p>Without SSS </p> <p>With slight SSS </p> <p>\"Overgrown\" dark side using <code>$SSSEmission</code>. </p>"},{"location":"documentation/Shaders/PBR/PBR_Parameters/#bent-normals","title":"Bent Normals","text":"<p>Explanation you must find online. Bent Normals will occlude only occlude specular reflection areas and is a separate texture from the actual $BumpMap! This effect can be activated using</p> <p><code>\"$BentNormal\" \"path/name\"</code></p> <p>The Bent Normal must be in Tangent Space! And it might only have real visible effects on models with actual self occlusion.</p> <p>Without Bent Normals  With Bent Normals </p>"},{"location":"documentation/Shaders/PBR/PBR_Parameters/#sheen","title":"Sheen","text":"<p>To be done. Currently kind of broken, its there but eeeeeeehhhh don't use it kk?</p> <p><code>$Sheen</code> and <code>$SheenIntensity</code></p> <p>Incompatible with <code>$EmissionTexture</code></p>"},{"location":"documentation/Shaders/PBR/PBR_Parameters/#vector-dependent-layering-textures-vectorlayers","title":"Vector dependent Layering Textures ( VectorLayers )","text":"<p>VectorLayers are textures that are being applied to a model/brush/displacement depending on a user defined Vector ( Direction ). This was intended as a way to give a more discrete look to surfaces on the Alaska map, by adding thin layers of ice or snow materials to upwards facing surfaces ( \"[0 0 1]\" ). It may be used for others effects. Some ideas :</p> <ol> <li>Dust Accumulation</li> <li>Sand Accumulation</li> <li>Snow Accumulation</li> <li>Blood Accumulation</li> <li>Spider Webs</li> <li>Fire Burn Mark Spreading Texture</li> <li>Liquid Flow Restriction ( Liquids should only be on surfaces that point upwards. )</li> </ol> <p>Vector Layers do not have their own Normal Maps and will thus not affect the actual thickness of its own layer. Additionally they do not have their own metallic properties, this was done for several reasons.</p> <ol> <li>All of the above shouldn't be metallic.</li> <li>These are supposed to be THIN layers, they should not affect the underlying material surface normals</li> </ol> <p>Using a VectorLayer requires two textures. You can find more information about them in the documentation about Textures and their requirements.</p> <pre><code>// The actual Texture to be applied to that Vector. Alpha is Ambient Occlusion.\n// Specifying this, will enable the effect.\n\"$VectorLayerTexture\"  \"path/name\"\n\n// Required for VectorLayers. Blue Channel masks the Layer and Alpha is Roughness\n\"$PropertiesTexture\"  \"path/name\"\n\n// The Vector to apply the texture on. \"[0 0 1]\" faces upwards. -1 downwards.\n// Sadly you cannot apply it to two vectors ( \"[0 0 1]\" &amp;&amp; \"[0 0 -1]\" ) at the same time.\n\"$LayerVector\"     \"[X Y Z]\"  \n\n// Smoothsteps the blending factor. The tolerance between facenormal and $LayerVector\n// Default Value is 0.3\n\"$LayerVectorSimilarity\" \"0.3\"\n</code></pre>"},{"location":"documentation/Shaders/PBR/PBR_Parameters/#emission-textures","title":"Emission Textures","text":"<p>$EmissionTexture's are added through addition to the results of the Shader. This means that it will display the $EmissionTexture regardless of light conditions or other occlusions. Note that for a bloom effect to appear, you must have some information the $BaseTexture. Over-brightening ( and thus bloom ) will only occur when the Results are above white.</p> <p>Note : Incompatible with $PropertiesTexture. These surfaces will glow because they are Incandescent, the surfaces are heated to &gt;525\u00b0C and we disabled this combo because if water touched this surface it would literally just explode. ( Seriously  though, we disabled it to get faster compiles, we deemed this combo to be very unlikely to occur ) Also Incompatible with Sheen.</p> <p>Here are available parameters and what they do.</p> <pre><code>// Path/Name of the Texture to be used for Emission.\n\"$EmissionTexture\" \"path/name\"\n\n// Tints the Emission. Default Values are \"[1 1 1]\"\n\"$EmissionTint\"  \"[R G B]\"\n\n// See Sub-Surface Scattering for more information.\n\"$SSSEmission\"  \"1\"\n</code></pre> <p> </p>"},{"location":"documentation/Shaders/PBR/PBR_Parameters/#model-lightmapping-lightmap-uvs","title":"Model Lightmapping &amp; Lightmap UV's","text":"<p>Non-Bumped Model Lightmaps are supported on our Shader. Dynamic light entities ( such as projected textures or named lights ) still cause a specular highlight through the bumpmap.Otherwise, static lights will have their lighting baked. This is ideal if you want nice Shadows for a Model.</p> <p>You can use this feature by enabling lightmaps for a prop_static in Hammer. Models that want to use Lightmaps must have $NormalTexture set to the NormalMap, and $bumpmap to literally any gibberish you can think of, it just needs to be defined ( as something other than \" \" ) in the VMT!</p> <p>Note that all previous limitations applied except for the $BumpMap restriction. If you want to use this feature, you are required to have some serious understanding on how models work. Simply enabling it for your random models will not give you meaningful results. Model Lightmaps require a Unique set of UV's, if the UV's are overlapping with eachother, mirrored or go out of the 0-1 range in either X or Y ( U or V ) this feature will not be usable. Like,REALLY, if you don't know what you are doing, don't bother!!!</p> <p>As for Lightmap UV's, this requires several custom tools to be used that are currently still in development. You will have to ask for a rundown on how that works, whats required etc and it assumes you have a very extended knowledge-setabout what lightmap uv's are, how multiple UV's works, how to compile code ( probably ) and what the limitations of model lightmaps in Source are. Also, Blender Lightmap UV pack SUCKS just so you know, it will not give you any decent results AT ALL for this.</p> <p>Note</p> <p>Incompatible with <code>$PropertiesTexture</code> ( Wetness/Porosity ) due to Sampler Limitation.</p> <p>An old development screenshot showing off Lightmap UVs on a Pyramid Model </p>"},{"location":"documentation/Shaders/PBR/PBR_Parameters/#micro-shadows","title":"Micro Shadows","text":"<p>Microshadows are a technique to enhance Light Occlusion in Ambient Occluded areas through the use of the Light-Direction, Normal Map and Ambient Occlusion Texture. The code for this is always run on models, however by default 0% of it will be applied. The parameter that controls to which degree Microshadows are applied is:</p> <pre><code>// 0.0 is 0%, and 1.0 is 100%\n\"$MicroShadows\" \"0.0\"\n</code></pre> <p>0% MicroShadows... </p> <p>100% MicroShadows.  Note that the corners near the keypads are noticeably darker. The amount of occlusion and direction depends on that of the light which is shining upon the model.</p>"},{"location":"documentation/Shaders/PBR/PBR_Parameters/#features-for-brushes","title":"Features for Brushes","text":""},{"location":"documentation/Shaders/PBR/PBR_Parameters/#parallax-corrected-cubemaps","title":"Parallax Corrected Cubemaps","text":"<p>Parallax Corrected Cubemaps are Cubemaps that are being corrected for Parallax... OK, but what does that mean? It means that the Cubemaps that is applied to brushes will be stretched to a predefined boundary area. This will essentially align the reflections with the scenery objects and the boundary of a room. This is unideal if the middle of the room is obstructed by objects and it cannot really be used for non-rectangular rooms. Use non-rectangular rooms and PCC at your own potential waste of time! As for how to use them, See this Tutorial on Source Tricks Website</p>"},{"location":"documentation/Shaders/PBR/PBR_Parameters/#for-these-see-features-for-models","title":"For these, see \"Features for Models\"","text":""},{"location":"documentation/Shaders/PBR/PBR_Parameters/#wetness-porosity_1","title":"Wetness Porosity","text":""},{"location":"documentation/Shaders/PBR/PBR_Parameters/#detail-textures_1","title":"Detail Textures","text":""},{"location":"documentation/Shaders/PBR/PBR_Parameters/#vector-dependent-layering-textures-vectorlayers_1","title":"Vector dependent Layering Textures ( VectorLayers )","text":""},{"location":"documentation/Shaders/PBR/PBR_Parameters/#emission-textures_1","title":"Emission Textures","text":""},{"location":"documentation/Shaders/PBR/PBR_Parameters/#features-for-displacements","title":"Features for Displacements","text":""},{"location":"documentation/Shaders/PBR/PBR_Parameters/#wetness-porosity_2","title":"Wetness Porosity","text":"<p>Displacements additionally receive following Parameters for Blending multiple Textures.</p> <pre><code>// Second texture for both Wetness/Porosity AND VectorLayers\n\"$PropertiesTexture2\" \"path/name\"\n\"$WetnessBias2\" \"0\"\n</code></pre>"},{"location":"documentation/Shaders/PBR/PBR_Parameters/#vector-dependent-layering-textures-vectorlayers_2","title":"Vector dependent Layering Textures ( VectorLayers )","text":"<p>Displacements additionally receive following Parameters for Blending multiple Textures.</p> <pre><code>// Second texture for both Wetness/Porosity AND VectorLayers\n\"$PropertiesTexture2\" \"path/name\"\n\"$VectorLayerTexture2\" \"path/name\"\n\"$LayerVector2\" \"[X Y Z]\"\n\"$LayerVectorSimilarity2\" \"0.3\"\n</code></pre>"},{"location":"documentation/Shaders/PBR/PBR_Parameters/#emission-textures-also-see-features-for-models","title":"Emission Textures ( Also see \"Features for Models\" )","text":"<p>Displacements additionally receive following Parameters for Blending multiple Textures. ShiroDkxtro2 Note : Second Emission Texture might be broken right now due to a bug with s15.</p> <pre><code>// Please note that this texture can not be tinted.\n\"$EmissionTexture2\" \"path/name\"\n</code></pre>"},{"location":"documentation/Shaders/PBR/PBR_Parameters/#seamless-mapping-seamless_secondary","title":"Seamless Mapping &amp; $Seamless_Secondary","text":"<p>For information about Seamless Mapping, See this VDC Article Now for the interesting part. $Seamless_Secondary ShiroDkxtro2 : As of today ( 17.04.2023 DMY ), this feature has not been fully implemented and seamless is kinda broken too. I will fix it as soon as I can. But this DOES work on LUX_ Shaders!</p> <p>Seamless Secondary allows to only have the second material to be seamless. This is very useful if you want to retain texture alignment whilst being able to account for stretchy textures on strong displacement inclines.</p>"},{"location":"documentation/Shaders/PBR/PBR_Parameters/#parallax-occlusion-mapping","title":"Parallax Occlusion Mapping","text":"<p>No explanation given. Its Heightmapping. NOTE: This is VERY expensive at the moment. Don't use it on very large surfaces or dare even attempt to use it on most materials in your scene, it will DESTROY your FPS.</p> <pre><code>// Turns the effect on. Uses Alpha Channel of the Normal Map for the Height Map\n\"$ParallaxMapping\" \"1\"\n\n// You have to play around with the value, it currently doesn't make much sense...\n\"$ParallaxHeight\" \"0\"\n\n// Same for the above.\n\"$ParallaxMaxOffSet\" \"0\"\n</code></pre>"},{"location":"documentation/Shaders/PBR/PBR_Parameters/#parallax-corrected-cubemaps-see-features-for-brushes","title":"Parallax Corrected Cubemaps ( See \"Features for Brushes\" )","text":""},{"location":"documentation/Shaders/PBR/PBR_Parameters/#detail-textures-see-features-for-models","title":"Detail Textures ( See \"Features for Models\" )","text":""},{"location":"documentation/Shaders/PBR/PBR_Parameters/#other-parameters","title":"Other Parameters","text":"<p>I will only list the parameters because it would be far too tedious to list what they do. Its mostly self-explanatory anyways or somehow already documented on the VDC. Just check if what you are looking for exists.</p> <p>Parameters : <pre><code>-----------------------------------------------------------------------------\n//////////////////////////////////////////////////\n// Actually implemented and working parameters //\n//////////////////////////////////////////////////\n// All Frame Vars :\n$BumpFrame\n$BumpFrame2\n$Frame\n$Frame2\n$MRAOFrame\n$BlendMaskFrame\n\n// This will transform Base, MRAO, properties and vectorlayer.\n$BaseTextureTransform\n$BaseTextureTransform2\n// Only transforms Bumpmaps\n$BumpTransform\n$BumpTransform2\n// Only for BlendModulate.\n$BlendMaskTransform\n\n// Texture I forgot to mention.\n$BlendModulateTexture\n\n// Tints your $BaseTexture\n$BaseTextureTint\n$BaseTextureTint2\n\n// EnvMapping Parameters\n$EnvMap \"custom envmap\"\n$EnvMapFrame \"int\"\n$EnvMapTint \"[R G B]\"\n$EnvMapContrast \"float\"\n$EnvMapSaturation \"float\"\n$EnvMapLightScale \"default 0, 1 will multiply reflections by lighting\"\n\n// Biases the MRAO's -1 will remove M, R or AO and +1 will force it to full white!\n$MRAOBias\n$MRAOBias2\n\n// Default value of 0.025f ( Average between 0.01 and 0.04 )\n// No explanation because you should know what this is if you want to change it.\n$DiElectricCoEfficient\n\n// You can manually set a lightmap if you so desire.\n$LightMap\n\n// Only touch this if you truly know what you are doing.\n$LightMapUVs \"0 | 1\"\n\n//////////////////////////////////////////////////\n// Parameters that exist right now but unused  //\n//////////////////////////////////////////////////\n$SelfIllum_EnvMapMask_Alpha\n$color\n$color2\n$BlendTintByBaseAlpha\n$BlendTintColorOverBase\n$BlendTintColorOverBase2\n$FresnelReflection\n$EnvMapFresnel\n$EnvMapFresnelMinMaxExp\n// This was supposed to be used on PBR_OVERRIDE\n$EnvMapMask\n$EnvMapMaskFrame\n$EnvMapMaskTransform\n\n//////////////////////////////////////////////////////////////////////////////\n// Features that are undetermined to be implemented or not yet implemented //\n//////////////////////////////////////////////////////////////////////////////\n$Hullshell\n$DitheredAlpha\n$MRAOFrame2\n$ParallaxIntensity\n// We have some Parallax Interval code, but it just looks worse when compared to POM.\n$ParallaxInterval\n// These are semi implemented\n$SpecularTexture\n$SpecularTexture2\n// Wrinkle Mapping\n$Compress\n$Stretch\n$BumpCompress\n$BumpStretch\n\n//////////////////////////////////////////////////\n// Internal Parameters that you shouldn't touch //\n//////////////////////////////////////////////////\n// MaterialName is stored on this.\n// Kind of a HACKHACK I had to do because theres no access later-on for materialnames\n$MaterialName \"String\"\n// This is used to turn on WVT internally.\n// Define $basetexture2 or any secondary texture and this will be set to 1.\n$InternalBoolWVT \"0 | 1\"\n\n// PCC Parameters that are set automatically when compiling the map.\n$EnvMapParallax\n$EnvMapParallaxOBB1\n$EnvMapParallaxOBB2\n$EnvMapParallaxOBB3\n$EnvMapOrigin\n</code></pre></p>"},{"location":"documentation/Sound/FMOD%20Studio%20and%20entity%20usage/","title":"FMOD Studio","text":"<p> FMOD STUDIO APP showcase</p> <p>FMOD is a proprietary sound effects engine and authoring tool for video games and applications developed by Firelight Technologies, that play and mix sounds of diverse formats on many operating systems.</p> <p>Note</p> <p>we implemented FMOD Studio inside of Hunt Down the freeman to allow us the following </p> <ul> <li>the use of other file formats like .ogg</li> <li>the abbilty to allow for dynamic music</li> <li>the use of more up to date tools</li> <li>and many more things</li> </ul>"},{"location":"documentation/Sound/FMOD%20Studio%20and%20entity%20usage/#logic_fmod_music","title":"logic_fmod_music","text":"FMOD Enitity icon used by hammer <p>we curently have a new entity inside of Hunt Down the Freeman</p> <p>its called <code>logic_fmod_music</code></p> <p>we use this entity to allow us to edit paramteres with hammer I/O with paramteres that are defined inside of FMOD Studio</p> <p>the entity has the following parameters:</p>"},{"location":"documentation/Sound/FMOD%20Studio%20and%20entity%20usage/#key-fields","title":"KEY FIELDS","text":"<ul> <li> <p>Name targetname <code>&lt;target_source&gt;</code> - The name that other entities refer to this entity by.</p> </li> <li> <p>BankFile BankFile <code>&lt;string&gt;</code> - BankFile to import.</p> </li> <li> <p>EventName Event_path <code>&lt;string&gt;</code> - Name of Event</p> </li> <li> <p>Is Loaded From VPK IsLoadedFromVPK <code>&lt;choices&gt;</code> - if the files for fmod are loaded from a vpk file</p> </li> <li> <p>SourceEntityName <code>&lt;target_destination&gt;</code> - If an entity is specified, sound will come from this named entity instead of the location of logic_fmod_music.</p> </li> <li> <p>Param 1 SetparamName1 <code>&lt;string&gt;</code> - Param 1 Name</p> </li> <li> <p>Param 2 SetparamName2 <code>&lt;string&gt;</code> - Param 2 Name</p> </li> <li> <p>Param 3 SetparamName3 <code>&lt;string&gt;</code> - Param 3 Name</p> </li> <li> <p>Param 4 SetparamName4 <code>&lt;string&gt;</code> - Param 4 Name</p> </li> </ul>"},{"location":"documentation/Sound/FMOD%20Studio%20and%20entity%20usage/#inputs","title":"INPUTS","text":"<ul> <li> <p>Start - Start the audio</p> </li> <li> <p>Stop - Stop the audio</p> </li> <li> <p>SetParameter1To <code>&lt;float&gt;</code> - Set Param 1 to (Float/Int)</p> </li> <li> <p>SetParameter2To <code>&lt;float&gt;</code> - Set Param 2 to (Float/Int)</p> </li> <li> <p>SetParameter3To <code>&lt;float&gt;</code> - Set Param 3 to (Float/Int)</p> </li> <li> <p>SetParameter4To <code>&lt;float&gt;</code> - Set Param 4 to (Float/Int)</p> </li> </ul>"},{"location":"documentation/Sound/FMOD%20Studio%20and%20entity%20usage/#basics","title":"Basics","text":"<p>we will not be covering how to use fmod studio in this section.</p> <p>If you want to learn more please take a look at this playlist on youtube for more info</p> <p>another great tutorial explaining how fmod works</p>"},{"location":"documentation/Sound/FMOD%20Studio%20and%20entity%20usage/#basic-tutorial-for-hammer","title":"Basic tutorial for hammer","text":"<p>After you have made you'r epic music track we now need to build the bank files you will need to go to fmod studio and inside of the <code>edit -&gt; preferences -&gt; build</code> tab</p> <p>we need to configure the output path of the bank file which is usually <code>sound/fmod/mapname_here</code> </p> <p>here is and example screenshot </p> <p> </p> Example of how the build tab should look <p>next after we build our bank files we need to specify the name of the bank inside of hammer itself</p> <p>my bank is named <code>dynamic_music</code> so i will just add the name to the entity's keyfield like here in this screenshot:</p> <p></p> <p>next we need to specify the event name you can get the event name by exporting the guids from fmod studio itself you can do that by going into fmod studio then <code>File -&gt; Export GUIDs...</code></p> <p>you will now see a <code>GUIDs.txt</code> file inside of the folder where you built your banks</p> <p>here is a screenshot of the .txt file:</p> <p></p> <p>as you can see we have 2 events now i want to use the <code>event:/dynamic_music</code> event</p> <p>next we specify the EventName in the entity with the event we want to use</p> <p>here is an example screenshot:</p> <p></p> <p>next we need to specify the parameter we want to be abel to manipulate using Hammer I/O </p> <p>we will take another look at the GUIDs.txt file and we see that we have a parameter named <code>parameter:/wanted_level</code> we will add that to the Param 1 field </p> <p>example screenshot:</p> <p></p> <p>WE ARE ALMOST DONE!!</p> <p>next we need to just make the music start from the entity we can use a logic_auto to fire a start output on our fmod entity</p> <p>example screenshot:</p> <p></p> <p>Note</p> <p>make sure to make the output be fired after  <code>2 seconds</code>   as the bank might not load fully on map spawn so be   careful. </p> <p>I would highly recommend you start the fmod entity  sometime later in your map so you are always sure that  it`s loaded properly!</p> <p>next we will make a combine soldier and after We kill him we will make the fmod entity set the <code>parameter:/wanted_level</code> param to be equal to <code>1</code> which will make our music change!</p> <p>example screenshot:</p> <p></p> <p>AND WE ARE DONE!</p> <p>now lets compile our map and check out the results</p> <p>here is a video of it in action:</p>"},{"location":"documentation/Sound/FMOD%20Studio%20and%20entity%20usage/#final-notes","title":"Final Notes","text":"<p>we also support loading the bank files from a <code>VPK</code></p> <p>all you need to do is put the bank files in a VPK and set <code>IS Load From VPK</code> to <code>Yes</code> inside the KeyField of the entity</p> <p>remember that the path inside the VPK should be the same</p> <p>example: <code>sound/fmod/&lt;your map name here&gt;</code></p> <p>you can put your vpk file in the custom folder and Voil\u00e0 it will work just like magic</p> <p>if you have any more questions feel free to join the hdtf disocrd here:</p> <p>HDTF Community Discord Server</p> <p>Thank you for reading!</p> <p>Note</p> <p>THIS PAGE IS A HEAVY WIP MORE STUFF WILL BE ADDED TO IT IN THE FUTURE</p>"}]}